# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: ingredients

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: ">=1.44.0"

runtime: nodejs10.x

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline #serverless-offline needs to be last in the list

provider:
  name: aws
  runtime: nodejs8.10
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "dynamodb:Query"
       Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:service}-${opt:stage, self:provider.stage}-Ingredients"
    -  Effect: "Allow"
       Action:
         - "dynamodb:PutItem"
       Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:service}-${opt:stage, self:provider.stage}-Ingredients"
    -  Effect: "Allow"
       Action:
         - "dynamodb:DeleteItem"
       Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:service}-${opt:stage, self:provider.stage}-Ingredients"
    -  Effect: "Allow"
       Action:
         - "dynamodb:GetItem"
       Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:service}-${opt:stage, self:provider.stage}-Ingredients"
custom:
  dynamodb:
    stages:
      - test
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    # Uncomment only if you already have a DynamoDB running locally
    # noStart: true

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  removeIngredient:
    handler: handler.deleteIngredientStyle

    events:
      - http:
          path: ingredients
          method: delete
          cors: true
      # - cloudwatchLog: '/aws/lambda/removeIngredient'

  addIngredient:
    handler: handler.addIngredient

    events:
      - http:
          path: ingredients/new
          method: post
          cors: true
      # - cloudwatchLog: '/aws/lambda/newIngredient'

  getIngredientsByUserId:
    handler: handler.getIngredientsByUserId

    events:
      - http:
          path: ingredients
          method: get
          cors: true

  getNewRecipe:
    handler: handler.getNewRecipe

    events:
      - http:
          path: recipes
          method: post
          cors: true
      # - cloudwatchLog: '/aws/lambda/getNewRecipe'

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UserIngredients
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
