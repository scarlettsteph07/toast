version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:8.10
    
    working_directory: ~/repo
    
    steps:
      - checkout
      # Download and cache dependencies

      # Update npm
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install
      
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # Run mocha
      - run:
          name: npm test
          command: ./node_modules/.bin/nyc ./node_modules/.bin/ts-mocha --recursive --timeout=10000 --exit --reporter mocha-junit-reporter --reporter-options mochaFile=reports/mocha/test-results.xml *.spec.ts
          when: always
      
      # Run eslint
      - run:
          name: tslint
          command: |
              ./node_modules/.bin/tslint --format junit --out ./reports/tslint/tslint.xml *.ts 
          when: always

      # Upload results
      
      - store_test_results:
          path: reports

      - store_artifacts:
          path: ./reports/mocha/test-results.xml

      - store_artifacts:
          path: ./reports/tslint/tslint.xml

      - store_artifacts: # upload test coverage as artifact
          path: ./coverage
  
  deploy-stage:
    docker:
      - image: circleci/node:8.10

    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install Serverless CLI and dependencies
          command: |
            sudo npm i -g serverless
            npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-
      
      - run:
          name: Configure credentials
          command: sls config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY
      
      - run:
          name: Deploy application
          command: sls deploy --stage staging
    
  deploy-production:
    docker:
      - image: circleci/node:8.10

    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install Serverless CLI and dependencies
          command: |
            sudo npm i -g serverless
            npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-
      
      - run:
          name: Configure credentials
          command: sls config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY
          
      - run:
          name: Deploy application
          command: sls deploy --stage production

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - develop
                - /feature-.*/
      - deploy-stage:
          context: toast
          requires:
            - build
          filters:
            branches:
              only: staging
      - deploy-production:
          context: toast
          requires:
            - build
          filters:
            branches:
              only: master
